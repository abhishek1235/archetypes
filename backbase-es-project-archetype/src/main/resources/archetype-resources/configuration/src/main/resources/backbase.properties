###### Portal Foundation #####

# Logging
foundation.logging=\${backbase.config.path}/logback.xml

# Database
foundation.database=\${db.type}
#database.foundation.hibernate.dialect.class=\${db.hibernate.dialect.class}
#foundation.hibernate.generate_statistics=true

# Environment
# Next line should be enabled for Editorial instance only
foundation.environment.editorial=true
# Next line should be enabled for Staging and/or Live instances only.
#foundation.environment.editorial=false
# Next line should be enabled for Editorial instance only and requires Content Services
foundation.versioning.enabled=true
#foundation.publishing.allowRecursiveSecurityUpdateForLinks=false
#foundation.session.anonymous.allowed=false

# Cache
foundation.cache.static.usecachecontrol=true
foundation.cache-static.useexpires=true
foundation.cache.static.maxage=300
#foundation.cachingFilter.cache.web.enabled=false
#foundation.cache.web.expiry.default=0
#foundation.cachingFilter.cache.web.pagesToCacheList=

# Device Reckogniton
foundation.device.config.location=\${backbase.config.path}/deviceConfig.xml

# Portal/Widget Import/Export
#foundation.exportimport.profile=ps-exportimport-none
#foundation.filesystem.contextroot=
foundation.import.directory=classpath:import
foundation.import.file=importPortal.xml
foundation.import.files.portal=portal.xml

### Proxy ###
# Content services proxy
foundation.content.proxy.destination=http://localhost:\${contentservices.port}/contentservices
foundation.content.proxy.username=admin
foundation.content.proxy.password=admin

# Orchestrator proxy
foundation.orchestrator.proxy.destination=http://localhost:\${orchestrator.port}/orchestrator
foundation.orchestrator.proxy.username=admin
foundation.orchestrator.proxy.password=admin

# Targeting proxy 
# Needed when connector-framework runs standalone
#targeting.connectorframework.remote.destination=http://localhost:8084/targeting-webapp
# Is always admin
#targeting.connectorframework.remote.username=admin
# Is always admin
#targeting.connectorframework.remote.password=admin

###### Mashup Services ######
# running embedded in Portal
foundation.ptc.profile=ptc-local
#foundation.ptc.profile=ptc-remote
# Next line is used to configure custom PTC configuration file
ptc.configfile.location=file:\${backbase.config.path}/ptc-config.xml,classpath:/ptc-launchpad.xml
#ptc.http.maxConnectionsPerHost=50
#ptc.http.maxTotalConnections=100
#ptc.reload-config-at-eachrequest=false
#ptc.requestEncoding=UTF-8
#ptc.responseEncoding=UTF-8
#ptc.http.defaultDataProviderTimeout=60000
#ptc.http.defaultConnectionTimeout=60000
#ptc.http.defaultSocketTimeout=60000

###### Targeting ######
# Geo-location collector properties
targeting.collector.geoloc.api.url=http://10.10.20.230:8888/json/
#targeting.collector.geoloc.api.url=http://freegeoip.net/json/
targeting.collector.geoloc.ip.lookup.url=http://jsonip.appspot.com

###### Audit ######
#this is optional and should be enabled on Editorial instance only
foundation.auditing=false

# Database
auditing.database=\${db.type}
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.H2Dialect
#auditing.hibernate.generate_statistics=false

###### Portal Manager ######
manager.uieditingoptions.location=classpath:/conf/uiEditingOptions.js
#manager.content.generatedFolders=/Generated content
#manager.content.sharedFolders=

###### Tracking ######
# Database
#optional.tracking.database=h2
#optional.database.tracking.hibernate.dialect.class=org.hibernate.dialect.H2Dialect
#tracking.hibernate.generate_statistics=true

# Configuration
foundation.tracking.tags.maxAge=3
optional.tracking.profile=trackingStoreCookie
#optional.backbase.tracking.mapping=path/to/mapping_file.xml

###### Controllers ######
#foundation.catalogTags.offset.default=0
#foundation.catalogTags.pageSize.default=50
#foundation.portalController.getPortals.offset.default=0
#foundation.portalController.getPortals.pageSize.default=50
#foundation.portalController.getPortal.processChildren.default=true
#foundation.pageController.getPages.offset.default=0
#foundation.pageController.getPages.pageSize.default=10
#foundation.pageController.getPages.depth.default=-1
#foundation.pageController.getPage.processChildren.default=true
#foundation.containerController.getContainers.offset.default=0
#foundation.containerController.getContainers.pageSize.default=20
#foundation.containerController.getContainers.depth.default=-1
#foundation.containerController.getContainer.processChildren.default=true
#foundation.widgetController.getWidgets.offset.default=0
#foundation.widgetController.getWidgets.pageSize.default=20
#foundation.widgetController.getWidgets.depth.default=-1
#foundation.linkController.getLinks.offset.default=0
#foundation.linkController.getLinks.linkSize.default=10
#foundation.linkController.getLinks.depth.default=-1
#foundation.linkController.getLink.processChildren.default=true
#foundation.userController.getUsers.offset.default=0
#foundation.userController.getUsers.pageSize.default=20
#foundation.userController.getGroupsForUser.offset.default=0
#foundation.userController.getGroupsForUser.pageSize.default=20
#foundation.groupController.getGroups.offset.default=0
#foundation.groupController.getGroups.pageSize.default=20
#foundation.groupController.getUsersForGroup.offset.default=0
#foundation.groupController.getUsersForGroup.pageSize.default=20
#foundation.templateController.getTemplates.offset.default=0
#foundation.templateController.getTemplates.pageSize.default=50
#foundation.templateController.getTemplates.depth.default=-1
#foundation.serverCatalog.offset.default=0
#foundation.serverCatalog.pageSize.default=20
#foundation.tagController.getTags.offset.default=0
#foundation.tagController.getTags.pageSize.default=20

###### Content Services ######

# Logging
contentservices.logging=\${backbase.config.path}/logback.xml

# Database
contentservices.database=\${db.type}
#contentservices.database.configuration.hibernate.dialect.class=\${db.hibernate.dialect.class}
#contentservices.database.content.hibernate.dialect.class=\${db.hibernate.dialect.class}
#contentservices.database.resource.hibernate.dialect.class=\${db.hibernate.dialect.class}

# Repositories
#contentservices.repository.configuration.id=
#contentservices.repository.configuration.name=
#contentservices.repository.configuration.productName=
#contentservices.repository.configuration.productVersion=
#contentservices.repository.configuration.vendorName=
#contentservices.repository.configuration.description=configurationRepository
contentservices.repository.configuration.fileLocation=\${backbase.data.dir}/content-assets/cs-configuration
#contentservices.repository.configuration.hbm2ddl.auto=validate
#contentservices.repository.configuration.schemaUpdate=false
#contentservices.repository.content.id=
#contentservices.repository.content.name=
#contentservices.repository.content.productName=
#contentservices.repository.content.productVersion=
#contentservices.repository.content.vendorName=
#contentservices.repository.content.description=configurationRepository
contentservices.repository.content.fileLocation=\${backbase.data.dir}/content-assets/cs-content
#contentservices.repository.content.hbm2ddl.auto=validate
#contentservices.repository.content.schemaUpdate=false
#contentservices.repository.resource.id=
#contentservices.repository.resource.name=
#contentservices.repository.resource.productName=
#contentservices.repository.resource.productVersion=
#contentservices.repository.resource.vendorName=
#contentservices.repository.resource.description=configurationRepository
contentservices.repository.resource.fileLocation=\${backbase.data.dir}/content-assets/cs-resource
#contentservices.repository.resource.hbm2ddl.auto=validate
#contentservices.repository.resource.schemaUpdate=false

# Schedulers
# Next line is optional and enables scheduler subsystem that can be used for automatic content import
contentservices.repository.scheduler.enabled=false
# Next line is optional and enables WebDav on CS
contentservices.repository.webdav.enabled=false

# Validators
#contentservices.validators=

# Cache
# Next lines are optional and are used to fine tune cache control
contentservices.cache-control.default=public; max-age=600
contentservices.cache-control.0.mime-type=image
contentservices.cache-control.0.cache-value=public; max-age=600
contentservices.cache-control.1.mime-type=image/jpeg
contentservices.cache-control.1.cache-value=public; max-age=300
contentservices.cache-control.2.mime-type=text/html
contentservices.cache-control.2.cache-value=public; max-age=900

#contentservices.dbstore.max-size-0

###### Orchestrator ######

orchestrator.name=Orchestrator
orchestrator.editorial=true

# Logging
orchestrator.logging=\${backbase.config.path}/logback.xml

# Database
orchestrator.database=\${db.type}
#database.orchestrator.hibernate.dialect.class=\${db.hibernate.dialect.class}
#orchestrator.hibernate.generate_statistics=false

# Credentials to log in with on orchestrator
orchestrator.username=admin
orchestrator.password=admin

# Allowed groups
orchestrator.approvalgroups=admin,manager,approvers
orchestrator.publishgroups=admin,manager,publishers

###### Audit ######
#this is optional and should be enabled on Editorial instance only
orchestrator.auditing=false

# Archiving
orchestrator.archiving=false
#orchestrator.archivetodatabase=false
#orchestrator.archivelocation=false

# Configuration
orchestrator.configuration.location=\${backbase.config.path}/to-self-publishchains.xml

# Location where publishing files will be stored
orchestrator.filestorelocation=\${backbase.data.dir}/tmp/fileStore

###### Orchestrator Import/Export #####
# Location where import files will be stored
orchestrator.import.location=\${backbase.data.dir}/tmp
# Location where export files will be stored
orchestrator.export.location=\${backbase.data.dir}/tmp
# location where export log files will be stored
orchestrator.export.log.location=\${backbase.data.dir}/log
#orchestrator.export.items.maximum=10000

###### Orchestrators #####
orchestrator.orchestrators.names=Orchestrator
orchestrator.orchestrators.Orchestrator.address=${orchestrator.host}
orchestrator.orchestrators.Orchestrator.port=${orchestrator.port}
orchestrator.orchestrators.Orchestrator.contextpath=${orchestrator.context}
orchestrator.orchestrators.Orchestrator.username=admin
orchestrator.orchestrators.Orchestrator.password=admin

#orchestrator.orchestrators.StagingOrchestrator.address=localhost
#orchestrator.orchestrators.StagingOrchestrator.port=7777
#orchestrator.orchestrators.StagingOrchestrator.contextpath=orchestrator-webapp
#orchestrator.orchestrators.StagingOrchestrator.username=admin
#orchestrator.orchestrators.StagingOrchestrator.password=admin

#orchestrator.orchestrators.LiveOrchestrator.address=localhost
#orchestrator.orchestrators.LiveOrchestrator.port=7777
#orchestrator.orchestrators.LiveOrchestrator.contextpath=orchestrator-webapp
#orchestrator.orchestrators.LiveOrchestrator.username=admin
#orchestrator.orchestrators.LiveOrchestrator.password=admin

### Orchestrator Content Host ###
orchestrator.contenthost.name=ContentServicesEditorial
orchestrator.contenthost.address=${contentservices.host}
orchestrator.contenthost.port=${contentservices.port}
orchestrator.contenthost.contextpath=${contentservices.context}/atom
orchestrator.contenthost.lockstrategy=nooplocking
orchestrator.contenthost.repositoryid=contentRepository
orchestrator.contenthost.username=admin
orchestrator.contenthost.password=admin

### Orchestrator Portal Host ###
orchestrator.portalhost.name=PortalFoundationEditorial
orchestrator.portalhost.address=${portal.host}
orchestrator.portalhost.port=${portal.port}
orchestrator.portalhost.contextpath=${portal.context}
orchestrator.portalhost.username=sys2sys
orchestrator.portalhost.password=sys2sys

orchestrator.threadpool.coresize=1
orchestrator.threadpool.maxsize=1
orchestrator.threadpool.queuesize=1000

#Launchpad
launchpad.themePath=${portal.url}/static/themes
launchpad.bundles=launchpad,lp
