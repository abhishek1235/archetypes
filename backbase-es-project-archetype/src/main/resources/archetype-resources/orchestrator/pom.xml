<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
            xsi:schemaLocation="
        http://maven.apache.org/POM/4.0.0 
        http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>\${groupId}</groupId>
        <artifactId>parent</artifactId>
        <version>\${version}</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>orchestrator</artifactId>
    <packaging>war</packaging>

    <name>Orchestrator</name>
    <description>A WAR overaly over Backbase Orchestrator component.</description>

    <properties>
        <!-- Standard Maven proeprties -->
        <work.dir>\${project.build.directory}/\${project.build.finalName}</work.dir>
    </properties>

    <dependencies>
        <!-- Orchestrator component -->
        <dependency>
            <groupId>com.backbase.portal.orchestrator</groupId>
            <artifactId>orchestrator-webapp</artifactId>
            <version>\${orchestrator.version}</version>
            <type>war</type>
        </dependency>
    
        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>\${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <stopKey>foo</stopKey>
                    <stopPort>${orchestrator.port.stop}</stopPort>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                    <jettyXml>\${configuration.dir}/target/configuration/local/jetty/orchestrator/jetty.xml</jettyXml>
                    <webApp>
                        <defaultsDescriptor>\${configuration.dir}/target/configuration/local/jetty/webdefaults.xml</defaultsDescriptor>
                        <contextPath>/orchestrator</contextPath>
                    </webApp>
                    <httpConnector>
                        <port>${orchestrator.port}</port>
                    </httpConnector>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>c3p0</groupId>
                        <artifactId>c3p0</artifactId>
                        <version>0.9.1</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>1.3.154</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <daemon>true</daemon>
                            <skip>\${skipTests}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <!-- or if you want to use tomcat 6.x
                <artifactId>tomcat6-maven-plugin</artifactId>
                -->
                <configuration>
                    <!-- http port -->
                    <port>${orchestrator.port}</port>
                    <!--<tomcat-url>http://localhost:8080/manager/html</tomcat-url>-->
                    <!-- application path always starts with /-->
                    <!--<path>/\${project.build.finalName}</path>-->
                    <path>/orchestrator</path>
                    <!-- optional, needed only if you want to use a preconfigured server.xml file -->
                    <!-- <serverXml>\${project.build.testOutputDirectory}/configuration/tomcat/server.xml</serverXml>-->
                    <!-- optional path to a context file -->
                    <contextFile>\${configuration.dir}/target/configuration/local/tomcat/orchestrator/context.xml</contextFile>
                    <!-- if you want to use test dependencies rather than only runtime -->
                    <useTestClasspath>false</useTestClasspath>
                    <!-- optional if you want to add some extra directories into the classloader -->
                    <additionalClasspathDirs>
                        <additionalClasspathDir></additionalClasspathDir>
                    </additionalClasspathDirs>
                    <addContextWarDependencies>true</addContextWarDependencies>
                    <addWarDependenciesInClassloader>true</addWarDependenciesInClassloader>
                    <warSourceDirectory>\${project.build.directory}/\${project.build.finalName}/</warSourceDirectory>
                </configuration>
                <!-- For any extra dependencies needed when running embedded Tomcat (not WAR dependencies) add them below -->
                <dependencies>
                    <dependency>
                        <groupId>javax.mail</groupId>
                        <artifactId>mail</artifactId>
                        <version>${javax.mail.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>c3p0</groupId>
                        <artifactId>c3p0</artifactId>
                        <version>0.9.1</version>
                    </dependency>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>1.3.154</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>create-database</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>createOrchestrator</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <driver>org.h2.Driver</driver>
                                    <url>jdbc:h2:file:\${data.dir}/db/orchestrator</url>
                                    <username>sa</username>
                                    <password></password>
                                    <srcFiles>
                                        <srcFile>\${configuration.dir}/target/configuration/local/db-scripts/orchestrator/scripts/h2/create_database.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>1.3.154</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile> 

        <profile>
            <id>clean-database</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>cleanOrchestrator</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <driver>org.h2.Driver</driver>
                                    <url>jdbc:h2:file:\${data.dir}/db/orchestrator</url>
                                    <username>sa</username>
                                    <password></password>
                                    <srcFiles>
                                        <srcFile>\${configuration.dir}/target/configuration/local/db-scripts/orchestrator/scripts/h2/drop_database.sql</srcFile>
                                        <srcFile>\${configuration.dir}/target/configuration/local/db-scripts/orchestrator/scripts/h2/create_database.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>1.3.154</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>  
    </profiles>
</project>
