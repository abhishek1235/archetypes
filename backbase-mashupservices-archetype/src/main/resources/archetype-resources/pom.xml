<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
    http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>\${groupId}</groupId>
    <artifactId>\${artifactId}</artifactId>
    <version>\${version}</version>
    <packaging>war</packaging>

    <properties>
        <work.dir>\${project.build.directory}/\${project.build.finalName}</work.dir>
        <project.build.sourceEncoding>${project.build.sourceEncoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.reporting.outputEncoding}</project.reporting.outputEncoding>

        <!-- Backbase module versions -->
        <mashupservices.version>${mashupservices.version}</mashupservices.version>

        <!-- Folder where H2 and binary data is stored-->
        <portal.data.dir>\${project.basedir}/data</portal.data.dir>
    </properties>

    <repositories>
        <repository>
            <id>repo.backbase.com</id>
            <url>https://repo.backbase.com/repo/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.backbase.services.mashup</groupId>
            <artifactId>mashup-web</artifactId>
            <version>\${mashupservices.version}</version>
            <type>war</type>
        </dependency>
    
        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${httpclient.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>\${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>configuration</directory>
                <filtering>true</filtering>
                <targetPath>configuration</targetPath>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.target.version}</source>
                    <target>${java.target.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.plugin.version}</version>
                <configuration>
                    <stopKey>foo</stopKey>
                    <stopPort>${mashupservices.port.stop}</stopPort>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                    <jettyXml>\${project.build.testOutputDirectory}/configuration/jetty/jetty.xml</jettyXml>
                    <webApp>
                        <defaultsDescriptor>\${project.build.testOutputDirectory}/configuration/jetty/webdefaults.xml</defaultsDescriptor>
                        <contextPath>/mashupservices-webapp</contextPath>
                    </webApp>
                    <httpConnector>
                        <port>${mashupservices.port}</port>
                    </httpConnector>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <daemon>true</daemon>
                            <skip>\${skipTests}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <!-- or if you want to use tomcat 6.x
                <artifactId>tomcat6-maven-plugin</artifactId>
                -->
                <version>${tomcat.plugin.version}</version>
                <configuration>
                    <!-- http port -->
                    <port>${mashupservices.port}</port>
                    <!--<tomcat-url>http://localhost:8080/manager/html</tomcat-url>-->
                    <!-- application path always starts with /-->
                    <!--<path>/\${project.build.finalName}</path>-->
                    <path>/mashupservices-webapp</path>
                    <!-- optional, needed only if you want to use a preconfigured server.xml file -->
                    <!-- <serverXml>\${project.build.testOutputDirectory}/configuration/tomcat/server.xml</serverXml>-->
                    <!-- optional path to a context file -->
                    <contextFile>\${project.build.testOutputDirectory}/configuration/tomcat/context.xml</contextFile>
                    <!-- if you want to use test dependencies rather than only runtime -->
                    <useTestClasspath>false</useTestClasspath>
                    <!-- optional if you want to add some extra directories into the classloader -->
                    <additionalClasspathDirs>
                        <additionalClasspathDir></additionalClasspathDir>
                    </additionalClasspathDirs>
                    <addContextWarDependencies>true</addContextWarDependencies>
                    <addWarDependenciesInClassloader>true</addWarDependenciesInClassloader>
                    <warSourceDirectory>\${project.build.directory}/\${project.build.finalName}/</warSourceDirectory>
                </configuration>
                <!-- For any extra dependencies needed when running embedded Tomcat (not WAR dependencies) add them below -->
                <dependencies>
                    <dependency>
                        <groupId>javax.mail</groupId>
                        <artifactId>mail</artifactId>
                        <version>${javax.mail.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.17</version>
            </plugin>
        </plugins>
    </build>
</project>
