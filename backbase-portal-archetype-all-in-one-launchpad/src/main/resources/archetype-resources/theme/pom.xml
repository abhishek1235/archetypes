<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
    http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>${groupId}</groupId>
        <artifactId>${artifactId}</artifactId>
        <version>${version}</version>
    </parent>

    <artifactId>theme</artifactId>
    <packaging>war</packaging>

    <properties>
        <work.dir>\${project.build.directory}/\${project.build.finalName}</work.dir>
        <theme.name>default</theme.name>
    </properties>

    <repositories>
        <repository>
            <id>repo.backbase.com</id>
            <url>https://repo.backbase.com/repo/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Less -->
        <dependency>
            <groupId>com.asual.lesscss</groupId>
            <artifactId>lesscss-engine</artifactId>
            <version>${less.version}</version>
        </dependency>
        <dependency>
            <groupId>com.asual.lesscss</groupId>
            <artifactId>lesscss-servlet</artifactId>
            <version>${less.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>\${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>configuration</directory>
                <filtering>true</filtering>
                <targetPath>configuration</targetPath>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.lesscss</groupId>
                <artifactId>lesscss-maven-plugin</artifactId>
                <version>${less.version}</version>
                <configuration>
                    <sourceDirectory>\${project.basedir}/src/main/webapp/static/themes/\${theme.name}/less</sourceDirectory>
                    <outputDirectory>\${project.build.directory}/\${build.finalName}/static/themes/\${theme.name}/css</outputDirectory>
					<compress>true</compress>
					<includes>
						<include>base.less</include>
					</includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Stops the default jar from beign created -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>**/WEB-INF,**/META-INF</packagingExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.plugin.version}</version>
                <configuration>
                    <stopKey>foo</stopKey>
                    <stopPort>${theme.port.stop}</stopPort>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                    <webAppConfig>
                        <defaultsDescriptor>\${project.build.testOutputDirectory}/configuration/jetty/webdefaults.xml</defaultsDescriptor>
                        <contextPath>/theme</contextPath>
                        <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                            <resourcesAsCSV>\${project.basedir}/src/main/webapp;\${work.dir}</resourcesAsCSV>
                        </baseResource>
                    </webAppConfig>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>${theme.port}</port>
                        </connector>
                    </connectors>
                    <reload>manual</reload>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <!-- or if you want to use tomcat 6.x
                <artifactId>tomcat6-maven-plugin</artifactId>
                -->
                <version>${tomcat.plugin.version}</version>
                <configuration>
                    <!-- http port -->
                    <port>${theme.port}</port>
                    <!--<tomcat-url>http://localhost:8080/manager/html</tomcat-url>-->
                    <!-- application path always starts with /-->
                    <!--<path>/\${project.build.finalName}</path>-->
                    <path>/theme</path>
                    <!-- optional, needed only if you want to use a preconfigured server.xml file -->
                    <!-- <serverXml>\${project.build.testOutputDirectory}/configuration/tomcat/server.xml</serverXml>-->
                    <!-- optional path to a context file -->
                    <contextFile>\${project.build.testOutputDirectory}/configuration/tomcat/context.xml</contextFile>
                    <!-- if you want to use test dependencies rather than only runtime -->
                    <useTestClasspath>false</useTestClasspath>
                    <!-- optional if you want to add some extra directories into the classloader -->
                    <additionalClasspathDirs>
                        <additionalClasspathDir></additionalClasspathDir>
                    </additionalClasspathDirs>
                    <addContextWarDependencies>true</addContextWarDependencies>
                    <addWarDependenciesInClassloader>true</addWarDependenciesInClassloader>
                    <warSourceDirectory>\${project.build.directory}/\${project.build.finalName}/</warSourceDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>